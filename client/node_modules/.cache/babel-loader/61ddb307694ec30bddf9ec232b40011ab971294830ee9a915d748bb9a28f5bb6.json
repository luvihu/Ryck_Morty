{"ast":null,"code":"export default function validate(userData) {\n  // Expresión regular para validar el email\n  const emailRegex = new RegExp(/^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i);\n\n  // Expresión regular para validar la contraseña\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,16}$/;\n  let errors = {};\n  if (!emailRegex.test(userData.email)) {\n    errors.email = \"Invalid email\";\n  }\n  if (!userData.email) {\n    errors.email = \"Ingrese su email\";\n  }\n  if (!userData.password) {\n    errors.password = \"Ingrese su password\";\n  }\n  if (userData.email.length > 35) {\n    errors.email = \"El email no puede tener mas de 35 caracteres\";\n  }\n  if (!/.*\\d+.*/.test(userData.password)) {\n    errors.password = \"El password debe tener al menos un número\";\n  }\n  ;\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = \"Pasword tiene que tener una longitud entre 6 y 10 caracteres\";\n  }\n  return errors;\n}","map":{"version":3,"names":["validate","userData","emailRegex","RegExp","passwordRegex","errors","test","email","password","length"],"sources":["C:/Lucy/r_m/client/src/components/validate/validate.jsx"],"sourcesContent":["\r\n\r\nexport default function validate(userData) {\r\n   // Expresión regular para validar el email\r\n   const emailRegex = new RegExp(/^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i);\r\n\r\n   // Expresión regular para validar la contraseña\r\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,16}$/;\r\n    \r\n  let errors = {};\r\n\r\n \r\n  if (!emailRegex.test(userData.email)) {\r\n    errors.email = \"Invalid email\";\r\n  }\r\n\r\n  if(!userData.email) {\r\n    errors.email = \"Ingrese su email\"\r\n  }\r\n  if (!userData.password) {\r\n   errors.password = \"Ingrese su password\";\r\n  }\r\n\r\n  if(userData.email.length >35) {\r\n    errors.email = \"El email no puede tener mas de 35 caracteres\";\r\n  }\r\n\r\n   if (!/.*\\d+.*/.test(userData.password)) {\r\n    errors.password = \"El password debe tener al menos un número\"};\r\n  \r\n\r\n   if (userData.password.length < 6 || userData.password.length > 10) {\r\n    errors.password = \"Pasword tiene que tener una longitud entre 6 y 10 caracteres\"\r\n  }\r\n  \r\n  return errors;\r\n}"],"mappings":"AAEA,eAAe,SAASA,QAAQA,CAACC,QAAQ,EAAE;EACxC;EACA,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAAC,2DAA2D,CAAC;;EAE1F;EACD,MAAMC,aAAa,GAAG,uDAAuD;EAE7E,IAAIC,MAAM,GAAG,CAAC,CAAC;EAGf,IAAI,CAACH,UAAU,CAACI,IAAI,CAACL,QAAQ,CAACM,KAAK,CAAC,EAAE;IACpCF,MAAM,CAACE,KAAK,GAAG,eAAe;EAChC;EAEA,IAAG,CAACN,QAAQ,CAACM,KAAK,EAAE;IAClBF,MAAM,CAACE,KAAK,GAAG,kBAAkB;EACnC;EACA,IAAI,CAACN,QAAQ,CAACO,QAAQ,EAAE;IACvBH,MAAM,CAACG,QAAQ,GAAG,qBAAqB;EACxC;EAEA,IAAGP,QAAQ,CAACM,KAAK,CAACE,MAAM,GAAE,EAAE,EAAE;IAC5BJ,MAAM,CAACE,KAAK,GAAG,8CAA8C;EAC/D;EAEC,IAAI,CAAC,SAAS,CAACD,IAAI,CAACL,QAAQ,CAACO,QAAQ,CAAC,EAAE;IACvCH,MAAM,CAACG,QAAQ,GAAG,2CAA2C;EAAA;EAAC;EAG/D,IAAIP,QAAQ,CAACO,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIR,QAAQ,CAACO,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IAClEJ,MAAM,CAACG,QAAQ,GAAG,8DAA8D;EAClF;EAEA,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}