{"ast":null,"code":"export default function validate(userData) {\n  // Expresión regular para validar el email\n  const emailRegex = new RegExp(/^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i);\n\n  // Expresión regular para validar la contraseña\n  // const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,16}$/;\n\n  let errors = {};\n\n  // Validación del email:\n\n  if (!emailRegex.test(userData.email)) {\n    errors.email = \"You must enter a valid email address\";\n  }\n  ;\n  if (userData.email.length === 0) {\n    errors.email = \"You must enter an email\";\n  }\n  if (userData.email.length > 35) {\n    errors.email = \"The email must be less than 35 characters\";\n  }\n  ;\n\n  // Validación de la contraseña:\n\n  if (!/\\d/.test(userData.password)) {\n    errors.password = \"The password must contain at least one number\";\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = \"Pasword tiene que tener una longitud entre 6 y 10 caracteres\";\n  }\n  return errors;\n}","map":{"version":3,"names":["validate","userData","emailRegex","RegExp","errors","test","email","length","password"],"sources":["C:/Lucy/PI-varios/r_m/client/src/components/validate/validate.jsx"],"sourcesContent":["\r\n\r\nexport default function validate(userData) {\r\n   // Expresión regular para validar el email\r\n   const emailRegex = new RegExp(/^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i);\r\n\r\n   // Expresión regular para validar la contraseña\r\n  // const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{4,16}$/;\r\n    \r\n  let errors = {};\r\n\r\n  // Validación del email:\r\n\r\n  if (!emailRegex.test(userData.email)) {\r\n    errors.email = \"You must enter a valid email address\";\r\n  };\r\n\r\n  if (userData.email.length === 0) {\r\n    errors.email = \"You must enter an email\";\r\n  }\r\n\r\n  if(userData.email.length >35) {\r\n    errors.email = \"The email must be less than 35 characters\";\r\n  };\r\n\r\n   // Validación de la contraseña:\r\n\r\n   if (!/\\d/.test(userData.password)) {\r\n    errors.password = \"The password must contain at least one number\";\r\n  }\r\n     \r\n   if (userData.password.length < 6 || userData.password.length > 10) {\r\n    errors.password = \"Pasword tiene que tener una longitud entre 6 y 10 caracteres\"\r\n  }\r\n  \r\n  return errors;\r\n}"],"mappings":"AAEA,eAAe,SAASA,QAAQA,CAACC,QAAQ,EAAE;EACxC;EACA,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAAC,2DAA2D,CAAC;;EAE1F;EACD;;EAEA,IAAIC,MAAM,GAAG,CAAC,CAAC;;EAEf;;EAEA,IAAI,CAACF,UAAU,CAACG,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC,EAAE;IACpCF,MAAM,CAACE,KAAK,GAAG,sCAAsC;EACvD;EAAC;EAED,IAAIL,QAAQ,CAACK,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC/BH,MAAM,CAACE,KAAK,GAAG,yBAAyB;EAC1C;EAEA,IAAGL,QAAQ,CAACK,KAAK,CAACC,MAAM,GAAE,EAAE,EAAE;IAC5BH,MAAM,CAACE,KAAK,GAAG,2CAA2C;EAC5D;EAAC;;EAEA;;EAEA,IAAI,CAAC,IAAI,CAACD,IAAI,CAACJ,QAAQ,CAACO,QAAQ,CAAC,EAAE;IAClCJ,MAAM,CAACI,QAAQ,GAAG,+CAA+C;EACnE;EAEC,IAAIP,QAAQ,CAACO,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACO,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IAClEH,MAAM,CAACI,QAAQ,GAAG,8DAA8D;EAClF;EAEA,OAAOJ,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}